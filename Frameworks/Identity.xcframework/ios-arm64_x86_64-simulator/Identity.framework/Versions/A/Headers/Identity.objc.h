// Objective-C API for talking to github.com/rarimo/rarime-mobile-identity-sdk Go package.
//   gobind -lang=objc github.com/rarimo/rarime-mobile-identity-sdk
//
// File is generated by gobind. Do not edit.

#ifndef __Identity_H__
#define __Identity_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"


@class IdentityCallDataBuilder;
@class IdentityProfile;
@class IdentityProof;
@class IdentityQueryIdentityInputs;
@class IdentityRegisterIdentityInputs;
@class IdentityRegistrationPassport;
@class IdentitySMTProof;
@class IdentityVerifierHelperProofPoints;
@class IdentityZkProof;

/**
 * CallDataBuilder builds the calldata for the register function.
 */
@interface IdentityCallDataBuilder : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
/**
 * BuildRegisterCalldata builds the calldata for the register function.
 */
- (NSData* _Nullable)buildRegisterCalldata:(NSData* _Nullable)proofJSON signature:(NSData* _Nullable)signature pubKeyPem:(NSData* _Nullable)pubKeyPem encapsulatedContentSize:(long)encapsulatedContentSize error:(NSError* _Nullable* _Nullable)error;
@end

/**
 * Profile represents a user profile.
 */
@interface IdentityProfile : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
/**
 * BuildQueryIdentityInputs builds the inputs for the queryIdentity circuit.
 */
- (NSData* _Nullable)buildQueryIdentityInputs:(NSData* _Nullable)dg1 smtProofJSON:(NSData* _Nullable)smtProofJSON selector:(NSString* _Nullable)selector pkPassportHash:(NSString* _Nullable)pkPassportHash issueTimestamp:(NSString* _Nullable)issueTimestamp identityCounter:(NSString* _Nullable)identityCounter timestampLowerbound:(NSString* _Nullable)timestampLowerbound timestampUpperbound:(NSString* _Nullable)timestampUpperbound identityCounterLowerbound:(NSString* _Nullable)identityCounterLowerbound identityCounterUpperbound:(NSString* _Nullable)identityCounterUpperbound error:(NSError* _Nullable* _Nullable)error;
/**
 * BuildRegisterIdentityInputs builds the inputs for the registerIdentity circuit.
 */
- (NSData* _Nullable)buildRegisterIdentityInputs:(NSData* _Nullable)encapsulatedContent signedAttributes:(NSData* _Nullable)signedAttributes dg1:(NSData* _Nullable)dg1 dg15:(NSData* _Nullable)dg15 pubKeyPem:(NSData* _Nullable)pubKeyPem signature:(NSData* _Nullable)signature error:(NSError* _Nullable* _Nullable)error;
/**
 * GetPublicKeyHash returns the public key hash.
 */
- (NSData* _Nullable)getPublicKeyHash:(NSError* _Nullable* _Nullable)error;
/**
 * GetRarimoAddress returns the Rarimo cosmos address
 */
- (NSString* _Nonnull)getRarimoAddress;
/**
 * GetRegistrationChallenge returns the registration challenge.
 */
- (NSData* _Nullable)getRegistrationChallenge:(NSError* _Nullable* _Nullable)error;
/**
 * NewProfile creates a new profile.
 */
- (IdentityProfile* _Nullable)newProfile:(NSData* _Nullable)secretKey error:(NSError* _Nullable* _Nullable)error;
@end

/**
 * Proof represents a proof.
 */
@interface IdentityProof : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field Proof.A with unsupported type: []string

// skipped field Proof.B with unsupported type: [][]string

// skipped field Proof.C with unsupported type: []string

@end

/**
 * QueryIdentityInputs represents the inputs for queryIdentity proof.
 */
@interface IdentityQueryIdentityInputs : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field QueryIdentityInputs.Dg1 with unsupported type: []int64

@property (nonatomic) NSString* _Nonnull eventID;
@property (nonatomic) NSString* _Nonnull eventData;
@property (nonatomic) NSString* _Nonnull idStateRoot;
// skipped field QueryIdentityInputs.IDStateSiblings with unsupported type: []string

@property (nonatomic) NSString* _Nonnull pkPassportHash;
@property (nonatomic) NSString* _Nonnull selector;
@property (nonatomic) NSString* _Nonnull skIdentity;
@property (nonatomic) NSString* _Nonnull timestamp;
@property (nonatomic) NSString* _Nonnull identityCounter;
@property (nonatomic) NSString* _Nonnull timestampLowerbound;
@property (nonatomic) NSString* _Nonnull timestampUpperbound;
@property (nonatomic) NSString* _Nonnull identityCounterLowerbound;
@property (nonatomic) NSString* _Nonnull identityCounterUpperbound;
@property (nonatomic) NSString* _Nonnull birthDateLowerbound;
@property (nonatomic) NSString* _Nonnull birthDateUpperbound;
@property (nonatomic) NSString* _Nonnull expirationDateLowerbound;
@property (nonatomic) NSString* _Nonnull expirationDateUpperbound;
@property (nonatomic) NSString* _Nonnull citizenshipMask;
/**
 * Marshal returns the JSON representation of the inputs.
 */
- (NSData* _Nullable)marshal:(NSError* _Nullable* _Nullable)error;
@end

/**
 * RegisterIdentityInputs represents the inputs for the registerIdentity circuit.
 */
@interface IdentityRegisterIdentityInputs : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull skIdentity;
// skipped field RegisterIdentityInputs.EncapsulatedContent with unsupported type: []int64

// skipped field RegisterIdentityInputs.SignedAttributes with unsupported type: []int64

// skipped field RegisterIdentityInputs.Sign with unsupported type: []string

// skipped field RegisterIdentityInputs.Modulus with unsupported type: []string

// skipped field RegisterIdentityInputs.Exp with unsupported type: []string

// skipped field RegisterIdentityInputs.Dg1 with unsupported type: []int64

// skipped field RegisterIdentityInputs.Dg15 with unsupported type: []int64

@property (nonatomic) NSString* _Nonnull icaoMerkleRoot;
// skipped field RegisterIdentityInputs.IcaoMerkleInclusionBranches with unsupported type: []string

// skipped field RegisterIdentityInputs.IcaoMerkleInclusionOrder with unsupported type: []string

/**
 * Marshal returns the JSON representation of the inputs.
 */
- (NSData* _Nullable)marshal:(NSError* _Nullable* _Nullable)error;
@end

/**
 * RegistrationPassport represents a registration passport.
 */
@interface IdentityRegistrationPassport : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field RegistrationPassport.DataType with unsupported type: [32]byte

@property (nonatomic) NSData* _Nullable signature;
@property (nonatomic) NSData* _Nullable publicKey;
@end

/**
 * SMTProof represents a sparse merkle tree proof.
 */
@interface IdentitySMTProof : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSData* _Nullable root;
// skipped field SMTProof.Siblings with unsupported type: [][]byte

@end

/**
 * VerifierHelperProofPoints represents the proof points for the VerifierHelper contract.
 */
@interface IdentityVerifierHelperProofPoints : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field VerifierHelperProofPoints.A with unsupported type: [2]*math/big.Int

// skipped field VerifierHelperProofPoints.B with unsupported type: [2][2]*math/big.Int

// skipped field VerifierHelperProofPoints.C with unsupported type: [2]*math/big.Int

@end

/**
 * ZkProof represents a zk proof.
 */
@interface IdentityZkProof : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field ZkProof.Proof with unsupported type: github.com/rarimo/rarime-mobile-identity-sdk.Proof

// skipped field ZkProof.PubSignals with unsupported type: github.com/rarimo/rarime-mobile-identity-sdk.PubSignals

@end

/**
 * AddressPrefix represents the cosmos address prefix.
 */
FOUNDATION_EXPORT NSString* _Nonnull const IdentityAddressPrefix;
/**
 * RsaSha12688Hex represents the register data type.
 */
FOUNDATION_EXPORT NSString* _Nonnull const IdentityRsaSha12688Hex;
/**
 * RsaSha12704Hex represents the register data type
 */
FOUNDATION_EXPORT NSString* _Nonnull const IdentityRsaSha12704Hex;

@interface Identity : NSObject
// skipped variable EventID with unsupported type: *math/big.Int

// skipped variable IcaoMerkleInclusionBranches with unsupported type: []string

// skipped variable IcaoMerkleInclusionOrder with unsupported type: []string

// skipped variable IcaoMerkleRoot with unsupported type: *math/big.Int

// skipped variable RegisterIdentityExp with unsupported type: []string

// skipped variable RegistrationMetaData with unsupported type: *github.com/ethereum/go-ethereum/accounts/abi/bind.MetaData

@end

/**
 * BigIntToBytes converts a big integer to a byte array.
 */
FOUNDATION_EXPORT NSData* _Nullable IdentityBigIntToBytes(NSString* _Nullable x, NSError* _Nullable* _Nullable error);

// skipped function ByteArrayToBits with unsupported parameter or return types


/**
 * CalculateProofIndex calculates the proof index.
 */
FOUNDATION_EXPORT NSData* _Nullable IdentityCalculateProofIndex(NSString* _Nullable passportKey, NSString* _Nullable identityKey, NSError* _Nullable* _Nullable error);

/**
 * NewBJJSecretKey generates a new secret key for the Baby JubJub curve.
 */
FOUNDATION_EXPORT NSData* _Nullable IdentityNewBJJSecretKey(void);

/**
 * NewMnemonic generates a new mnemonic.
 */
FOUNDATION_EXPORT NSString* _Nonnull IdentityNewMnemonic(NSError* _Nullable* _Nullable error);

/**
 * NewSecretKeyFromSeed generates a new secret key from a seed.
 */
FOUNDATION_EXPORT NSString* _Nonnull IdentityNewSecretKeyFromSeed(NSData* _Nullable seed, NSError* _Nullable* _Nullable error);

// skipped function RsaPubKeyPemToN with unsupported parameter or return types


/**
 * SeedFromMnemonic generates a seed from a mnemonic.
 */
FOUNDATION_EXPORT NSData* _Nullable IdentitySeedFromMnemonic(NSString* _Nullable mnemonic, NSError* _Nullable* _Nullable error);

// skipped function SmartChunking with unsupported parameter or return types


#endif
